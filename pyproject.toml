[tool.poetry]
name = "zulip-backend"
version = "6.0.0"
description = ""
authors = [""]
readme = "README.md"
packages = []

[tool.poetry.dependencies]
python = "^3.10"
django = {version = ">=4.1.0,<4.2.0", extras = ["argon2"]}
typing-extensions = "^4.4.0"
jinja2 = "^3.1.2"
markdown = "^3.4.1"
pygments = "^2.13.0"
jsx-lexer = "^2.0.0"
ipython = "^8.7.0"
pillow = "^9.3.0"
sqlalchemy = ">=1.4.0,<1.5.0"
boto3 = "^1.26.28"
mypy-boto3-s3 = "^1.26.0.post1"
mypy-boto3-ses = "^1.26.0.post1"
mypy-boto3-sns = "^1.26.22"
mypy-boto3-sqs = "^1.26.0.post1"
defusedxml = "^0.7.1"
django-bitfield = "^2.2.0"
django-statsd-mozilla = "^0.4.0"
python-gcm = "^0.4"
html2text = "^2020.1.16"
premailer = "^3.10.0"
pyjwt = "^2.6.0"
pika = "^1.3.1"
python-binary-memcached = "^0.31.1"
django-bmemcached = "^0.3.0"
python-dateutil = "^2.8.2"
redis = "^4.4.0"
sourcemap = "^0.2.1"
tornado = "^6.2"
orjson = "^3.8.3"
aioapns = "^2.2"
python-twitter = "^3.5"
polib = "^1.1.1"
virtualenv-clone = "^0.5.7"
beautifulsoup4 = "^4.11.1"
pyoembed = "^0.1.2"
python-magic = "^0.4.27"
py3dns = "^3.2.1"
social-auth-app-django = "^5.0.0"
cryptography = "^38.0.4"
lxml = "^4.9.1"
django-two-factor-auth = {extras = ["call", "phonenumberslite", "sms"], version = "^1.14.0"}
stripe = "^5.0.0"
django-sendfile2 = "^0.7.0"
disposable-email-domains = "^0.0.85"
jsonref = "^1.0.1"
pyahocorasick = "^1.4.4"
decorator = "^5.1.1"
zxcvbn = "^4.4.28"
requests = {extras = ["security"], version = "^2.28.1"}
requests-oauthlib = "^1.3.1"
openapi-core = "^0.16.2"
openapi-schema-validator = "^0.3.4"
sentry-sdk = "^1.11.1"
tlds = "^2022070701"
pyuca = "^1.2"
backoff = "^2.2.1"
pymongo = "^4.3.3"
google-re2 = "^1.0"
django-cte = "^1.2.1"
django-scim2 = "^0.18.0"
soupsieve = "^2.3.2.post1"
circuitbreaker = "^1.4.0"
django-stubs-ext = "^0.7.0"
talon-core = {git = "https://github.com/zulip/talon", rev = "talon-core-split", subdirectory = "talon-core"}
zulip = {git = "https://github.com/zulip/python-zulip-api", rev = "0.8.2", subdirectory = "zulip"}
zulip-bots = {git = "https://github.com/zulip/python-zulip-api", rev = "0.8.2", subdirectory = "zulip_bots"}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ["py38"]

[tool.isort]
src_paths = [".", "tools"]
known_third_party = "zulip"
profile = "black"
line_length = 100

[tool.mypy]
# Logistics of what code to check and how to handle the data.
scripts_are_modules = true
show_traceback = true
# See https://zulip.readthedocs.io/en/latest/testing/mypy.html#mypy-stubs-for-third-party-modules
# for notes on how we manage mypy stubs.
mypy_path = "$MYPY_CONFIG_FILE_DIR/stubs"
cache_dir = "$MYPY_CONFIG_FILE_DIR/var/mypy-cache"

# Enable strict mode, with some exceptions.
strict = true
disallow_subclassing_any = false
disallow_untyped_calls = false
disallow_untyped_decorators = false
warn_return_any = false

# Enable optional errors.
enable_error_code = [
    "redundant-expr",
    "truthy-bool",
    "ignore-without-code",
    "unused-awaitable",
]

# Display the codes needed for # type: ignore[code] annotations.
show_error_codes = true

# Warn of unreachable or redundant code.
warn_unreachable = true

# dmypy enables local_partial_types implicitly. We need mypy to align
# with this behavior.
local_partial_types = true

plugins = ["mypy_django_plugin.main"]

[[tool.mypy.overrides]]
module = ["zproject.configured_settings", "zproject.settings", "zproject.default_settings"]
no_implicit_reexport = false

[[tool.mypy.overrides]]
module = [
    "ahocorasick.*",
    "aioapns.*", # https://github.com/Fatal1ty/aioapns/issues/33
    "bitfield.*",
    "bmemcached.*",
    "cairosvg.*",
    "circuitbreaker.*",
    "coverage.*",
    "cssutils.*",
    "defusedxml.*", # https://github.com/tiran/defusedxml/issues/46
    "digitalocean.*",
    "disposable_email_domains.*",
    "django_auth_ldap.*",
    "django_bmemcached.*",
    "django_cte.*",
    "django_otp.*",
    "django_scim.*",
    "django_sendfile.*",
    "django_statsd.*",
    "DNS.*",
    "fakeldap.*",
    "gcm.*",
    "gitlint.*",
    "jsonref.*",
    "ldap.*",
    "moto.*", # https://github.com/spulec/moto/issues/4944
    "onelogin.*",
    "premailer.*",
    "pyinotify.*",
    "pyoembed.*",
    "pyuca.*",
    "re2.*",
    "requests_oauthlib.*", # https://github.com/requests/requests-oauthlib/issues/428
    "scim2_filter_parser.attr_paths",
    "scrapy.*", # https://github.com/scrapy/scrapy/issues/4041
    "social_core.*",
    "social_django.*",
    "sourcemap.*",
    "talon_core.*",
    "tlds.*",
    "twitter.*",
    "two_factor.*",
]
ignore_missing_imports = true

[tool.django-stubs]
django_settings_module = "zproject.settings"

[tool.ruff]
# See https://github.com/charliermarsh/ruff#rules for error code definitions.
select = [
    "ANN", # annotations
    "B", # bugbear
    "C4", # comprehensions
    "E", # style errors
    "F", # flakes
    "I", # import sorting
    "N", # naming
    "PGH", # pygrep-hooks
    "PLC", # pylint convention
    "PLE", # pylint error
    "PLR", # pylint refactor
    "RUF", # Ruff
    "T10", # debugger
    "UP", # upgrade
    "W", # style warnings
    "YTT", # sys.version
]
ignore = [
    "ANN101", # Missing type annotation for `self` in method
    "ANN102", # Missing type annotation for `cls` in classmethod
    "ANN401", # Dynamically typed expressions (typing.Any) are disallowed
    "B007", # Loop control variable not used within the loop body
    "B008", # Do not perform function calls in argument defaults
    "B023", # Function definition does not bind loop variable
    "B904", # Within an except clause, raise exceptions with raise ... from err or raise ... from None to distinguish them from errors in exception handling
    "C408", # Unnecessary `dict` call (rewrite as a literal)
    "E402", # Module level import not at top of file
    "E501", # Line too long
    "E731", # Do not assign a lambda expression, use a def
    "N802", # Function name should be lowercase
    "N806", # Variable in function should be lowercase
    "RUF001", # String contains ambiguous unicode character
    "RUF003", # Comment contains ambiguous unicode character
]
line-length = 100
src = [".", "tools"]
target-version = "py38"

[tool.ruff.isort]
known-third-party = ["zulip"]
